{"version":3,"sources":["components/DrinkCard.js","components/Thumbnail.js","components/Alcoholic.js","components/NonAlcoholic.js","App.js","reportWebVitals.js","index.js"],"names":["DrinkCard","props","measurements","counter","item","drinkInfo","getIngredients","className","src","strDrinkThumb","alt","strDrink","strAlcoholic","strCategory","strGlass","Object","keys","map","ingredient","strInstructions","console","log","Thumbnail","to","drink","idDrink","style","backgroundColor","Alcoholic","useState","drinks","setDrinks","useEffect","fetch","then","response","json","data","NonAlcoholic","Drinks","React","setDrink","drinkId","match","params","App","drinkOfDay","setDrinkOfDay","class","path","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.88780176.chunk.js","sourcesContent":["function DrinkCard(props) {\n  let measurements = {}\n\n  function getIngredients() {\n    let counter = 1\n\n    for (const item in props.drinkInfo) {\n      if (\n        item === `strIngredient${counter}` &&\n        props.drinkInfo[item] !== null\n      ) {\n        measurements[props.drinkInfo[`strIngredient${counter}`]] =\n          props.drinkInfo[`strMeasure${counter}`]\n        counter++\n      }\n    }\n  }\n  getIngredients()\n\n  return (\n    <div className=\"drink\">\n      <img\n        className=\"drink__image\"\n        src={props.drinkInfo.strDrinkThumb}\n        alt={props.drinkInfo.strDrink}\n      />\n      <h1>{props.drinkInfo.strDrink}</h1>\n      <p>\n        <b>Type:</b> {props.drinkInfo.strAlcoholic}\n      </p>\n      <p>\n        <b>Category:</b> {props.drinkInfo.strCategory}\n      </p>\n      <p>\n        <b>Glass: </b>\n        {props.drinkInfo.strGlass}\n      </p>\n      <p>\n        <b>Ingredients: </b>\n        {Object.keys(measurements).map((ingredient) => {\n          if (measurements[ingredient] === 'Garnish with') {\n            return (\n              <li key={ingredient}>\n                {measurements[ingredient]} {ingredient}{' '}\n              </li>\n            )\n          } else {\n            return (\n              <li key={ingredient}>\n                {ingredient} {measurements[ingredient]}\n              </li>\n            )\n          }\n        })}\n      </p>\n      <p>\n        <b>Instructions:</b> {props.drinkInfo.strInstructions}\n      </p>\n      <h1>{console.log(props.drinkInfo)}</h1>\n    </div>\n  )\n}\n\nexport default DrinkCard\n\n","import React from 'react'\nimport { Link } from 'react-router-dom'\n\nfunction Thumbnail(props) {\n  return (\n    <Link to={`/drinks/${props.drink.idDrink}`}>\n      <div className=\"card\" style={{ backgroundColor: '#ffe6ff' }}>\n        <img\n          className=\"card__image\"\n          src={props.drink.strDrinkThumb}\n          alt={props.drink.strDrink}\n        />\n        <p>{props.drink.strDrink}</p>\n      </div>\n    </Link>\n  )\n}\n\nexport default Thumbnail\n","import React, { useState, useEffect } from 'react'\nimport Thumbnail from './Thumbnail'\n\nfunction Alcoholic() {\n  const [drinks, setDrinks] = useState([])\n\n  useEffect(() => {\n    fetch('https://www.thecocktaildb.com/api/json/v1/1/filter.php?a=Alcoholic')\n      .then((response) => response.json())\n      .then((data) => setDrinks(data.drinks))\n  }, [])\n\n  return (\n    <div>\n      <h1>Alcoholic Drinks</h1>\n      <div className=\"cards\">\n        {drinks.map((drink) => (\n          <Thumbnail drink={drink} key={drink.idDrink} />\n        ))}\n      </div>\n    </div>\n  )\n}\n\nexport default Alcoholic\n","import React, { useState, useEffect } from 'react'\nimport Thumbnail from './Thumbnail'\n\nfunction NonAlcoholic() {\n  const [drinks, setDrinks] = useState([])\n\n  useEffect(() => {\n    fetch(\n      'https://www.thecocktaildb.com/api/json/v1/1/filter.php?a=Non_Alcoholic'\n    )\n      .then((response) => response.json())\n      .then((data) => setDrinks(data.drinks))\n  }, [])\n\n  return (\n    <div>\n      <h1>Non-Alcoholic Drinks</h1>\n      <div className=\"cards\">\n        {drinks.map((drink) => (\n          <Thumbnail drink={drink} key={drink.idDrink} />\n        ))}\n      </div>\n    </div>\n  )\n}\n\nexport default NonAlcoholic\n","import './App.css'\nimport React, { useState, useEffect } from 'react'\nimport { BrowserRouter as Router, Switch, Route, Link } from 'react-router-dom'\nimport DrinkCard from './components/DrinkCard'\nimport Alcoholic from './components/Alcoholic'\nimport NonAlcoholic from './components/NonAlcoholic'\nfunction App() {\n  const [drinkOfDay, setDrinkOfDay] = useState({})\n\n  useEffect(() => {\n    fetch('https://www.thecocktaildb.com/api/json/v1/1/random.php')\n      .then((response) => response.json())\n      .then((data) => setDrinkOfDay(data.drinks[0]))\n  }, [])\n\n  return (\n    <Router>\n      <div className=\"App\">\n        <nav class=\"navbar navbar-light\" className=\"nav\">\n          <ul>\n            <li\n              class=\"btn btn-outline-primary btn-lg\"\n              style={{ backgroundColor: '#ffe6ff ' }}\n              className=\"navLink\"\n            >\n              <Link to=\"/\">Drink of the Day</Link>\n            </li>\n            <li\n              class=\"btn btn-outline-primary btn-lg\"\n              style={{ backgroundColor: '#ffe6ff ' }}\n              className=\"navLink\"\n            >\n              <Link to=\"/alcoholic\">Alcoholic</Link>\n            </li>\n            <li\n              class=\"btn btn-outline-primary btn-lg\"\n              style={{ backgroundColor: '#ffe6ff ' }}\n              className=\"navLink\"\n            >\n              <Link to=\"/non_alcoholic\">Non-Alcoholic</Link>\n            </li>\n          </ul>\n        </nav>\n\n        <Switch>\n          <Route path=\"/drinks/:drinkId\" component={Drinks} />\n          <Route path=\"/alcoholic\">\n            <Alcoholic />\n          </Route>\n          <Route path=\"/non_alcoholic\">\n            <NonAlcoholic />\n          </Route>\n          <Route path=\"/\">\n            <DrinkCard drinkInfo={drinkOfDay} />\n          </Route>\n        </Switch>\n      </div>\n    </Router>\n  )\n}\n\nfunction Drinks(props) {\n  const [drink, setDrink] = React.useState(null)\n  const { drinkId } = props.match.params\n  React.useEffect(() => {\n    fetch(`https://www.thecocktaildb.com/api/json/v1/1/lookup.php?i=${drinkId}`)\n      .then((response) => response.json())\n      .then((data) => {\n        setDrink(data.drinks[0])\n      })\n  }, [drinkId])\n\n  console.log({ drink: drink })\n\n  return drink ? <DrinkCard drinkInfo={drink} /> : 'Loading...'\n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import 'bootstrap/dist/css/bootstrap.min.css'\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport reportWebVitals from './reportWebVitals'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}